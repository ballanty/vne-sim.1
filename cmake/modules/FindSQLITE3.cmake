# * find Sqlite 3 SQLITE3_INCLUDE_DIR - Where to find Sqlite 3 header files
#   (directory) SQLITE3_LIBRARIES - Sqlite 3 libraries SQLITE3_LIBRARY_RELEASE -
#   Where the release library is SQLITE3_LIBRARY_DEBUG - Where the debug library
#   is SQLITE3_FOUND - Set to TRUE if we found everything (library, includes and
#   executable)

# Copyright (c) 2010 Pau Garcia i Quiles, <pgquiles@elpauer.org>
#
# Redistribution and use is allowed according to the terms of the BSD license.
# For details see the accompanying COPYING-CMAKE-SCRIPTS file.
#
# Generated by CModuler, a CMake Module Generator -
# http://gitorious.org/cmoduler

if(SQLITE3_INCLUDE_DIR
   AND SQLITE3_LIBRARY_RELEASE
   AND SQLITE3_LIBRARY_DEBUG)
  set(SQLITE3_FIND_QUIETLY TRUE)
endif(
  SQLITE3_INCLUDE_DIR
  AND SQLITE3_LIBRARY_RELEASE
  AND SQLITE3_LIBRARY_DEBUG)

find_path(SQLITE3_INCLUDE_DIR sqlite3.h)

find_library(SQLITE3_LIBRARY_RELEASE NAMES sqlite3)

find_library(
  SQLITE3_LIBRARY_DEBUG
  NAMES sqlite3 sqlite3d
  HINTS /usr/lib/debug/usr/lib/)

if(SQLITE3_LIBRARY_RELEASE
   OR SQLITE3_LIBRARY_DEBUG
   AND SQLITE3_INCLUDE_DIR)
  set(SQLITE3_FOUND TRUE)
endif(
  SQLITE3_LIBRARY_RELEASE
  OR SQLITE3_LIBRARY_DEBUG
  AND SQLITE3_INCLUDE_DIR)

if(SQLITE3_LIBRARY_DEBUG AND SQLITE3_LIBRARY_RELEASE)
  # if the generator supports configuration types then set optimized and debug
  # libraries, or if the CMAKE_BUILD_TYPE has a value
  if(CMAKE_CONFIGURATION_TYPES OR CMAKE_BUILD_TYPE)
    set(SQLITE3_LIBRARIES optimized ${SQLITE3_LIBRARY_RELEASE} debug
                          ${SQLITE3_LIBRARY_DEBUG})
  else(CMAKE_CONFIGURATION_TYPES OR CMAKE_BUILD_TYPE)
    # if there are no configuration types and CMAKE_BUILD_TYPE has no value then
    # just use the release libraries
    set(SQLITE3_LIBRARIES ${SQLITE3_LIBRARY_RELEASE})
  endif(CMAKE_CONFIGURATION_TYPES OR CMAKE_BUILD_TYPE)
elseif(SQLITE3_LIBRARY_RELEASE)
  set(SQLITE3_LIBRARIES ${SQLITE3_LIBRARY_RELEASE})
else(SQLITE3_LIBRARY_DEBUG AND SQLITE3_LIBRARY_RELEASE)
  set(SQLITE3_LIBRARIES ${SQLITE3_LIBRARY_DEBUG})
endif(SQLITE3_LIBRARY_DEBUG AND SQLITE3_LIBRARY_RELEASE)

if(SQLITE3_FOUND)
  if(NOT SQLITE3_FIND_QUIETLY)
    message(STATUS "Found Sqlite3 header file in ${SQLITE3_INCLUDE_DIR}")
    message(STATUS "Found Sqlite3 libraries: ${SQLITE3_LIBRARIES}")
  endif(NOT SQLITE3_FIND_QUIETLY)
else(SQLITE3_FOUND)
  if(SQLITE3_FIND_REQUIRED)
    message(FATAL_ERROR "Could not find Sqlite3")
  else(SQLITE3_FIND_REQUIRED)
    message(STATUS "Optional package Sqlite3 was not found")
  endif(SQLITE3_FIND_REQUIRED)
endif(SQLITE3_FOUND)
